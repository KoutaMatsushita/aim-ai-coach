import { blob, integer, numeric, real, sqliteTable, text } from "drizzle-orm/sqlite-core";

export const composite = sqliteTable("Composite", {
	totalScore: real(),
	accuracyScore: real(),
	speedScore: real(),
	precisionScore: real(),
	timestamp: real().primaryKey(),
});

export const pentakillData = sqliteTable("PentakillData", {
	accTotal: real(),
	kps: real("KPS"),
	spk: real("SPK"),
	killTotal: real(),
	shotsTotal: blob(),
	timePerKill: real(),
	timestamp: real().primaryKey(),
	missUp: integer(),
	missUpLeft: integer(),
	missUpRight: integer(),
	missLeft: integer(),
	missRight: integer(),
	missDown: integer(),
	missDownLeft: integer(),
	missDownRight: integer(),
	score: integer(),
	mode: integer(),
	map: integer(),
});

export const playstyleData = sqliteTable("PlaystyleData", {
	timeStamp: real().primaryKey(),
	totalTime: real(),
	task: text(),
	map: integer(),
	stillStateVal: real(),
	moveStateVal: real(),
	runStateVal: real(),
	jumpStateVal: real(),
	crouchStateVal: real(),
	zoomStateVal: real(),
	hipStateVal: real(),
	stillStateAccVal: real(),
	moveStateAccVal: real(),
	runStateAccVal: real(),
	jumpStateAccVal: real(),
	crouchStateAccVal: real(),
	zoomStateAccVal: real(),
	hipStateAccVal: real(),
	pistolStateVal: real(),
	rifleStateVal: real(),
	shotgunStateVal: real(),
	sniperStateVal: real(),
	pistolStateAccVal: real(),
	rifleStateAccVal: real(),
	shotgunStateAccVal: real(),
	sniperStateAccVal: real(),
	score: integer(),
	mode: integer(),
});

export const reflexShotData = sqliteTable("ReflexShotData", {
	accTotal: real(),
	accB0: real(),
	accB1: real(),
	accB2: real(),
	accB3: real(),
	accB4: real(),
	accB5: real(),
	accB6: real(),
	accB7: real(),
	rtTotal: real(),
	rtB0: real(),
	rtB1: real(),
	rtB2: real(),
	rtB3: real(),
	rtB4: real(),
	rtB5: real(),
	rtB6: real(),
	rtB7: real(),
	killTotal: integer(),
	shotsTotal: integer(),
	targetsTotal: integer(),
	timestamp: real().primaryKey(),
	killsPerSec: real(),
	score: integer(),
	mode: integer(),
	map: integer(),
});

export const strafeShotData = sqliteTable("StrafeShotData", {
	accTotal: real(),
	kps: real("KPS"),
	spk: real("SPK"),
	killTotal: text(),
	shotsTotal: real(),
	timePerKill: real(),
	timestamp: real().primaryKey(),
	missUp: integer(),
	missUpLeft: integer(),
	missUpRight: integer(),
	missLeft: integer(),
	missRight: integer(),
	missDown: integer(),
	missDownLeft: integer(),
	missDownRight: integer(),
	score: integer(),
	mode: integer(),
	map: integer(),
});

export const spiderShotData = sqliteTable("SpiderShotData", {
	accTotal: real(),
	accB0: real(),
	accB1: real(),
	accB2: real(),
	accB3: real(),
	accB4: real(),
	accB5: real(),
	accB6: real(),
	accB7: real(),
	rtTotal: real(),
	rtB0: real(),
	rtB1: real(),
	rtB2: real(),
	rtB3: real(),
	rtB4: real(),
	rtB5: real(),
	rtB6: real(),
	rtB7: real(),
	killTotal: integer(),
	shotsTotal: integer(),
	targetsTotal: integer(),
	timestamp: real().primaryKey(),
	killsPerSec: real(),
	mode: integer(),
	map: integer(),
	score: integer(),
});

export const visDetectData = sqliteTable("VisDetectData", {
	rtTotal: real(),
	rtB0: real(),
	rtB1: real(),
	rtB2: real(),
	rtB3: real(),
	rtB4: real(),
	rtB5: real(),
	rtB6: real(),
	rtB7: real(),
	faTotal: integer("FATotal"),
	targetsTotal: integer(),
	timestamp: real().primaryKey(),
	score: integer(),
	mode: integer(),
	map: integer(),
});

export const blinkShotData = sqliteTable("BlinkShotData", {
	accTotal: real(),
	kps: real("KPS"),
	spk: real("SPK"),
	killTotal: text(),
	shotsTotal: real(),
	timePerKill: real(),
	timestamp: real().primaryKey(),
	missUp: integer(),
	missUpLeft: integer(),
	missUpRight: integer(),
	missLeft: integer(),
	missRight: integer(),
	missDown: integer(),
	missDownLeft: integer(),
	missDownRight: integer(),
	score: integer(),
	mode: integer(),
	map: integer(),
});

export const microShotData = sqliteTable("MicroShotData", {
	accTotal: real(),
	accB0: real(),
	accB1: real(),
	accB2: real(),
	accB3: real(),
	accB4: real(),
	accB5: real(),
	accB6: real(),
	accB7: real(),
	rtTotal: real(),
	rtB0: real(),
	rtB1: real(),
	rtB2: real(),
	rtB3: real(),
	rtB4: real(),
	rtB5: real(),
	rtB6: real(),
	rtB7: real(),
	killTotal: integer(),
	shotsTotal: integer(),
	targetsTotal: integer(),
	timestamp: real().primaryKey(),
	killsPerSec: real(),
	mode: integer(),
	map: integer(),
	score: integer(),
});

export const motionShotData = sqliteTable("MotionShotData", {
	accTotal: real(),
	accB0: real(),
	accB1: real(),
	accB2: real(),
	accB3: real(),
	accB4: real(),
	accB5: real(),
	accB6: real(),
	accB7: real(),
	rtTotal: real(),
	rtB0: real(),
	rtB1: real(),
	rtB2: real(),
	rtB3: real(),
	rtB4: real(),
	rtB5: real(),
	rtB6: real(),
	rtB7: real(),
	killTotal: integer(),
	shotsTotal: integer(),
	targetsTotal: integer(),
	timestamp: real().primaryKey(),
	killsPerSec: real(),
	mode: integer(),
	map: integer(),
	score: integer(),
});

export const freeTrackData = sqliteTable("FreeTrackData", {
	accTotal: real(),
	kps: real("KPS"),
	spk: real("SPK"),
	killTotal: text(),
	shotsTotal: real(),
	timePerKill: real(),
	timestamp: real().primaryKey(),
	missUp: integer(),
	missUpLeft: integer(),
	missUpRight: integer(),
	missLeft: integer(),
	missRight: integer(),
	missDown: integer(),
	missDownLeft: integer(),
	missDownRight: integer(),
	score: integer(),
	mode: integer(),
	map: integer(),
});

export const ninjaShotData = sqliteTable("NinjaShotData", {
	accTotal: real(),
	kps: real("KPS"),
	spk: real("SPK"),
	killTotal: text(),
	shotsTotal: real(),
	timePerKill: real(),
	timestamp: real().primaryKey(),
	missUp: integer(),
	missUpLeft: integer(),
	missUpRight: integer(),
	missLeft: integer(),
	missRight: integer(),
	missDown: integer(),
	missDownLeft: integer(),
	missDownRight: integer(),
	score: integer(),
	mode: integer(),
	map: integer(),
});

export const audioSpatialData = sqliteTable("AudioSpatialData", {
	accTotal: real(),
	accB0: real(),
	accB1: real(),
	accB2: real(),
	accB3: real(),
	accB4: real(),
	accB5: real(),
	accB6: real(),
	accB7: real(),
	rtTotal: real(),
	rtB0: real(),
	rtB1: real(),
	rtB2: real(),
	rtB3: real(),
	rtB4: real(),
	rtB5: real(),
	rtB6: real(),
	rtB7: real(),
	hitsTotal: integer(),
	missesTotal: integer(),
	targetsTotal: integer(),
	timestamp: real().primaryKey(),
	mode: integer(),
	map: integer(),
	score: integer(),
	errTotal: real(),
	errB0: real(),
	errB1: real(),
	errB2: real(),
	errB3: real(),
	errB4: real(),
	errB5: real(),
	errB6: real(),
	errB7: real(),
});

export const skillsData = sqliteTable("SkillsData", {
	composite: real(),
	flickAcc: real(),
	trackingAcc: real(),
	precision: real(),
	efficiency: real(),
	consistency: real(),
	speed: real(),
	sensory: real(),
	cognitive: real(),
	motor: real(),
	timestamp: real().primaryKey(),
});

export const decisionShotData = sqliteTable("DecisionShotData", {
	accTotal: real(),
	accB0: real(),
	accB1: real(),
	accB2: real(),
	accB3: real(),
	accB4: real(),
	accB5: real(),
	accB6: real(),
	accB7: real(),
	rtTotal: real(),
	rtB0: real(),
	rtB1: real(),
	rtB2: real(),
	rtB3: real(),
	rtB4: real(),
	rtB5: real(),
	rtB6: real(),
	rtB7: real(),
	killTotal: integer(),
	shotsTotal: integer(),
	targetsTotal: integer(),
	timestamp: real().primaryKey(),
	killsPerSec: real(),
	mode: integer(),
	map: integer(),
	score: integer(),
	shotAccTotal: real(),
	nonmatchWait: real(),
	nonmatchHit: real(),
	matchWait: real(),
	matchHit: real(),
});

export const capacityData = sqliteTable("CapacityData", {
	accTotal: real(),
	accB0: real(),
	accB1: real(),
	accB2: real(),
	accB3: real(),
	accB4: real(),
	accB5: real(),
	accB6: real(),
	accB7: real(),
	rtTotal: real(),
	rtB0: real(),
	rtB1: real(),
	rtB2: real(),
	rtB3: real(),
	rtB4: real(),
	rtB5: real(),
	rtB6: real(),
	rtB7: real(),
	hitsTotal: integer(),
	missesTotal: integer(),
	targetsTotal: integer(),
	timestamp: real().primaryKey(),
	mode: integer(),
	map: integer(),
	score: integer(),
	visualCapacity: real(),
});

export const rocketShotData = sqliteTable("RocketShotData", {
	accTotal: real(),
	kps: real("KPS"),
	spk: real("SPK"),
	killTotal: text(),
	shotsTotal: real(),
	timePerKill: real(),
	timestamp: real().primaryKey(),
	missUp: integer(),
	missUpLeft: integer(),
	missUpRight: integer(),
	missLeft: integer(),
	missRight: integer(),
	missDown: integer(),
	missDownLeft: integer(),
	missDownRight: integer(),
	score: integer(),
	mode: integer(),
	map: integer(),
});

export const multiShotData = sqliteTable("MultiShotData", {
	accTotal: real(),
	accB0: real(),
	accB1: real(),
	accB2: real(),
	accB3: real(),
	accB4: real(),
	accB5: real(),
	accB6: real(),
	accB7: real(),
	rtTotal: real(),
	rtB0: real(),
	rtB1: real(),
	rtB2: real(),
	rtB3: real(),
	rtB4: real(),
	rtB5: real(),
	rtB6: real(),
	rtB7: real(),
	killTotal: integer(),
	shotsTotal: integer(),
	targetsTotal: integer(),
	timestamp: real().primaryKey(),
	killsPerSec: real(),
	mode: integer(),
	map: integer(),
	score: integer(),
	dnr: integer(),
});

export const sniperShotData = sqliteTable("SniperShotData", {
	accTotal: real(),
	accB0: real(),
	accB1: real(),
	accB2: real(),
	accB3: real(),
	accB4: real(),
	accB5: real(),
	accB6: real(),
	accB7: real(),
	rtTotal: real(),
	rtB0: real(),
	rtB1: real(),
	rtB2: real(),
	rtB3: real(),
	rtB4: real(),
	rtB5: real(),
	rtB6: real(),
	rtB7: real(),
	killTotal: integer(),
	shotsTotal: integer(),
	targetsTotal: integer(),
	timestamp: real().primaryKey(),
	killsPerSec: real(),
	mode: integer(),
	map: integer(),
	score: integer(),
});

export const microFlexData = sqliteTable("MicroFlexData", {
	accTotal: real(),
	accB0: real(),
	accB1: real(),
	accB2: real(),
	accB3: real(),
	accB4: real(),
	accB5: real(),
	accB6: real(),
	accB7: real(),
	rtTotal: real(),
	rtB0: real(),
	rtB1: real(),
	rtB2: real(),
	rtB3: real(),
	rtB4: real(),
	rtB5: real(),
	rtB6: real(),
	rtB7: real(),
	killTotal: integer(),
	shotsTotal: integer(),
	targetsTotal: integer(),
	timestamp: real().primaryKey(),
	killsPerSec: real(),
	score: integer(),
	mode: integer(),
	map: integer(),
});

export const circleShotData = sqliteTable("CircleShotData", {
	accTotal: real(),
	kps: real("KPS"),
	spk: real("SPK"),
	killTotal: text(),
	shotsTotal: real(),
	timePerKill: real(),
	timestamp: real().primaryKey(),
	missUp: integer(),
	missUpLeft: integer(),
	missUpRight: integer(),
	missLeft: integer(),
	missRight: integer(),
	missDown: integer(),
	missDownLeft: integer(),
	missDownRight: integer(),
	score: integer(),
	mode: integer(),
	map: integer(),
});

export const freeplayTcData = sqliteTable("FreeplayTCData", {
	timestamp: real(),
	accTotal: real(),
	killTotal: integer(),
	hitsTotal: integer(),
	missesTotal: integer(),
	score: integer(),
	avgDist: real(),
	maxDist: real(),
	mode: integer(),
	map: integer(),
});

export const dodgeShotData = sqliteTable("DodgeShotData", {
	accTotal: real(),
	kps: real("KPS"),
	spk: real("SPK"),
	killTotal: text(),
	shotsTotal: real(),
	timePerKill: real(),
	timestamp: real().primaryKey(),
	missUp: integer(),
	missUpLeft: integer(),
	missUpRight: integer(),
	missLeft: integer(),
	missRight: integer(),
	missDown: integer(),
	missDownLeft: integer(),
	missDownRight: integer(),
	score: integer(),
	mode: integer(),
	map: integer(),
});

export const circleTrackData = sqliteTable("CircleTrackData", {
	otr: real("OTR"),
	timestamp: real().primaryKey(),
	missUp: integer(),
	missUpLeft: integer(),
	missUpRight: integer(),
	missLeft: integer(),
	missRight: integer(),
	missDown: integer(),
	missDownLeft: integer(),
	missDownRight: integer(),
	score: integer(),
	mode: integer(),
	map: integer(),
	avgTimeOn: real(),
	avgTimeOff: real(),
	maxTimeOn: real(),
	maxTimeOff: real(),
});

export const strafeTrackData = sqliteTable("StrafeTrackData", {
	otr: real("OTR"),
	timestamp: real().primaryKey(),
	missUp: integer(),
	missUpLeft: integer(),
	missUpRight: integer(),
	missLeft: integer(),
	missRight: integer(),
	missDown: integer(),
	missDownLeft: integer(),
	missDownRight: integer(),
	score: integer(),
	mode: integer(),
	map: integer(),
	avgTimeOn: real(),
	avgTimeOff: real(),
	maxTimeOn: real(),
	maxTimeOff: real(),
});

export const taskData = sqliteTable("TaskData", {
	taskId: integer().primaryKey().notNull(),
	klutchId: text(),
	createDate: numeric(),
	taskName: text(),
	score: integer(),
	mode: integer(),
	aimlabMap: integer("aimlab_map"),
	aimlabVersion: text("aimlab_version"),
	weaponType: text(),
	weaponName: text(),
	performanceClass: text(),
	workshopId: text(),
	performance: text(),
	playId: text(),
	startedAt: numeric(),
	endedAt: numeric(),
	hasReplay: integer(),
	weaponSkin: text(),
	appId: text(),
});

export const myErrorData = sqliteTable("MyErrorData", {
	errorId: integer().primaryKey().notNull(),
	klutchId: text({ length: 140 }),
	createDate: numeric(),
	precisionAvg: real(),
	gainAvg: real(),
	gainB0: real(),
	gainB1: real(),
	gainB2: real(),
	gainB3: real(),
	gainB4: real(),
	gainB5: real(),
	gainB6: real(),
	gainB7: real(),
	errorAvg: real(),
	errorB0: real(),
	errorB1: real(),
	errorB2: real(),
	errorB3: real(),
	errorB4: real(),
	errorB5: real(),
	errorB6: real(),
	errorB7: real(),
	angleAvg: real(),
	angleB0: real(),
	angleB1: real(),
	angleB2: real(),
	angleB3: real(),
	angleB4: real(),
	angleB5: real(),
	angleB6: real(),
	angleB7: real(),
	taskName: text({ length: 140 }),
	mode: integer(),
});

export const savedResult = sqliteTable("SavedResult", {
	id: integer("Id").primaryKey().notNull(),
	createDate: numeric("CreateDate"),
	json: text("Json", { length: 140 }),
});

export const skillData = sqliteTable("SkillData", {
	id: integer().primaryKey().notNull(),
	taskId: integer(),
	klutchId: text({ length: 140 }),
	createDate: numeric(),
	taskName: text({ length: 140 }),
	flicking: real(),
	tracking: real(),
	speed: real(),
	precision: real(),
	perception: real(),
	cognition: real(),
	gainAvg: real(),
	errorAvg: real(),
	gainPerBin: text({ length: 140 }),
	errorPerBin: text({ length: 140 }),
	compositeScore: real(),
});

export const metricsData = sqliteTable("MetricsData", {
	id: integer("ID").primaryKey().notNull(),
	playId: text("PlayID", { length: 140 }),
	klutchId: text({ length: 140 }),
	createDate: numeric(),
	flickError: text("FlickError", { length: 140 }),
	shotTime: text("ShotTime", { length: 140 }),
	pathOptimization: text("PathOptimization", { length: 140 }),
	pacing: text("Pacing", { length: 140 }),
	edgeTracking: text("EdgeTracking", { length: 140 }),
	smoothness: text("Smoothness", { length: 140 }),
	prediction: text("Prediction", { length: 140 }),
});

export const missionsData = sqliteTable("MissionsData", {
	id: integer("ID").primaryKey().notNull(),
	missionId: text("MissionID", { length: 140 }),
	progress: integer("Progress"),
	weeklyProgress: text("WeeklyProgress", { length: 140 }),
	goal: integer("Goal"),
	createDate: numeric(),
	expirationDate: numeric("ExpirationDate"),
	taskId: text("TaskID", { length: 140 }),
	taskName: text("TaskName", { length: 140 }),
	taskMode: integer("TaskMode"),
	workshopId: text("WorkshopID", { length: 140 }),
	initialScore: integer("InitialScore"),
});

export const playlistData = sqliteTable("PlaylistData", {
	id: integer("ID").primaryKey().notNull(),
	version: integer("Version"),
	klutchId: text({ length: 140 }),
	createDate: numeric(),
	playListId: text("PlayListId", { length: 140 }),
	playIds: text("PlayIds", { length: 140 }),
});

export const sensitivityAppliedData = sqliteTable("SensitivityAppliedData", {
	id: integer("ID").primaryKey().notNull(),
	version: integer("Version"),
	sensitivityBefore: text("SensitivityBefore", { length: 140 }),
	sensitivityAfter: text("SensitivityAfter", { length: 140 }),
	device: integer("Device"),
	createDate: numeric(),
	klutchId: text({ length: 140 }),
	dpi: integer("DPI"),
});

export const coachingPathData = sqliteTable("CoachingPathData", {
	id: integer("ID").primaryKey().notNull(),
	klutchId: text("KlutchID", { length: 140 }),
	coachingPathId: text("CoachingPathID", { length: 140 }),
	skillFocus: text("SkillFocus", { length: 140 }),
	commitmentLevel: integer("CommitmentLevel"),
	baselineScore: real("BaselineScore"),
	currentTargetScore: real("CurrentTargetScore"),
	currentDifficultyLevel: real("CurrentDifficultyLevel"),
	maxDifficultyReached: real("MaxDifficultyReached"),
	lastAttemptTime: numeric("LastAttemptTime"),
	createDate: numeric(),
});

export const coachingDailyResultData = sqliteTable("CoachingDailyResultData", {
	id: integer("ID").primaryKey().notNull(),
	klutchId: text("KlutchID", { length: 140 }),
	playId: text("PlayID", { length: 140 }),
	coachingPathId: text("CoachingPathID", { length: 140 }),
	achievedScore: real("AchievedScore"),
	achievedDifficultyLevel: real("AchievedDifficultyLevel"),
	goalMet: integer("GoalMet"),
	playedAt: numeric("PlayedAt"),
	createDate: numeric(),
});

export const sensData = sqliteTable("SensData", {
	id: integer("ID").primaryKey().notNull(),
	version: integer("Version"),
	playId: text("PlayID", { length: 140 }),
	klutchId: text({ length: 140 }),
	createDate: numeric(),
	type: integer("Type"),
	device: integer("Device"),
	fov: real("FOV"),
	dpi: integer("DPI"),
	hipfire: text("Hipfire", { length: 140 }),
	ads: text("ADS", { length: 140 }),
	values: text("Values", { length: 140 }),
	weights: text("Weights", { length: 140 }),
	analysisWeight: real("AnalysisWeight"),
	duration: real("Duration"),
	deviceInfo: text("DeviceInfo", { length: 140 }),
});
